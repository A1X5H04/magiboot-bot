name: 'Send Status Update'
description: 'Sends a status update to the bot webhook'

inputs:
  status:
    description: 'The status to send (e.g., "pending", "processing", "completed", "failed")'
    required: true
  message:
    description: 'The descriptive message for the status update'
    required: true
  msg_metadata:
    description: 'The Telegram message metadata'
    required: true
  data:
    description: 'A JSON string for completed statuses (e.g., post metadata)'
    required: false
  progress:
    description: 'A progress percentage (0-100) for processing statuses'
    required: false

runs:
  using: "composite"
  steps:
    - name: "Validate inputs"
      shell: bash
      run: |
        set -e
        
        if [[ -z "${{ inputs.msg_metadata }}"]]; then
          echo "❌ Error: msg_metadata is required" >&2
          exit 1
        fi

        echo "${{ inputs.msg_metadata }}" | jq -e . >/dev/null || { echo "echo_metadata must be a valid JSON object" >&2; exit 1; }

        CHAT_ID=$(echo "${{ inputs.msg_metadata }}" | jq -r '.chat_id')
        MESSAGE_ID=$(echo "${{ inputs.msg_metadata }}" | jq -r '.message_id')

        if [[ -z "$CHAT_ID" || -z "$MESSAGE_ID" ]]; then
          echo "❌ Error: chat_id and message_id are required" >&2
          exit 1
        fi

        echo "chat_id=$CHAT_ID" >> "$GITHUB_OUTPUT"
        echo "message_id=$MESSAGE_ID" >> "$GITHUB_OUTPUT"


    - name: "Generate JSON payload"
      shell: bash
      run: |
        #!/bin/bash
        set -e

        STATUS_TYPE="${{ inputs.status }}"
        MESSAGE="${{ inputs.message }}"
        PROGRESS="${{ inputs.progress }}"
        DATA_JSON="${{ inputs.data }}"
        CHAT_ID="${{ steps.validate.outputs.chat_id }}"
        MESSAGE_ID="${{ steps.validate.outputs.message_id }}"

        case "$STATUS_TYPE" in
          pending|failed)
            PAYLOAD=$(jq -n \
              --arg status "$STATUS_TYPE" \
              --arg message "$MESSAGE" \
              --argjson tg_metadata '{"chatId": '"$CHAT_ID"', "messageId": '"$MESSAGE_ID"'}' \
              '{status: $status, message: $message, tg_metadata: $tg_metadata}')
            ;;
          processing)
            PAYLOAD=$(jq -n \
              --arg status "processing" \
              --arg message "$MESSAGE" \
              --argjson progress "$PROGRESS" \
              --argjson tg_metadata '{"chatId": '"$CHAT_ID"', "messageId": '"$MESSAGE_ID"'}' \
              '{status: $status, message: $message, progress: $progress, tg_metadata: $tg_metadata}')
            ;;
          completed)
            PAYLOAD=$(jq -n \
              --arg status "completed" \
              --arg message "$MESSAGE" \
              --argjson post_metadata "$DATA_JSON" \
              --argjson tg_metadata '{"chatId": '"$CHAT_ID"', "messageId": '"$MESSAGE_ID"'}' \
              '{status: $status, message: $message, tg_metadata: $tg_metadata, post_metadata: $post_metadata}')
            ;;
          *)
            echo "Invalid status: $STATUS_TYPE" >&2
            exit 1
            ;;
        esac

        echo "payload=$PAYLOAD" >> "$GITHUB_OUTPUT"

    - name: "Send payload to webhook"
      shell: bash
      run: |
        set -e
        : "${TELEGRAM_BOT_WEBHOOK_URL?Webhook URL must be set}"
        curl --silent --show-error --fail \
            -X POST -H "Content-Type: application/json" \
            -d "${{ steps.prepare_payload.outputs.payload }}" \
            "$TELEGRAM_BOT_WEBHOOK_URL"
        echo "Notification sent successfully."